<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/data/jpa 
		http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
 
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- 整合JPA配置 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="cn.itcast.bos.domain" />
		<!-- 指定一个持久化提供者 -->
		<property name="persistenceProvider">
			<bean class="org.hibernate.jpa.HibernatePersistenceProvider" />
		</property>
		
		<!-- 指定Jpa持久化实现厂商类,这里以Hibernate为例 -->
		<property name="jpaVendorAdapter">
			 <!-- Hibernate对Jpa的实现 -->
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="true" />
				<property name="database" value="ORACLE" />
				<property name="databasePlatform" value="org.hibernate.dialect.Oracle10gDialect" />
				<property name="showSql" value="true" />
			</bean>
		</property>
		
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
			
		<property name="jpaPropertyMap"> 
			<map> 
 					<!-- 将HQL映射成sql语句-->  
				<entry key="hibernate.query.substitutions" value="true 1, false 0" /> 
					
					<!-- 为Hibernate关联的批量抓取设置默认数量.  建议的取值为4, 8, 和16 -->
				<entry key="hibernate.default_batch_fetch_size" value="16" /> 
					
					<!-- 为单向关联(一对一, 多对一)的外连接抓取（outer join fetch）树设置最大深度. 值为0意味着将关闭默认的外连接抓取. 取值 建议在0到3之间取值   -->
				<entry key="hibernate.max_fetch_depth" value="2" /> 
					
					<!-- 如果开启, Hibernate将收集有助于性能调节的统计数据.取值true | false -->
 				<entry key="hibernate.generate_statistics" value="true" /> 
					
					<!-- 	开启CGLIB来替代运行时反射机制(系统级属性). 反射机制有时在除错时比较有用. 注意即使关闭这个优化,
					 Hibernate还是需要CGLIB. 你不能在hibernate.cfg.xml中设置此属性.取值true | false -->
				<entry key="hibernate.bytecode.use_reflection_optimizer" value="true" />
					
					<!-- 能用来完全禁止使用二级缓存. 对那些在类的映射定义中指定的类，会默认开启二级缓存. 取值 true|false -->
				<entry key="hibernate.cache.use_second_level_cache" value="false" /> 
					
					<!-- 允许查询缓存, 个别查询仍然需要被设置为可缓存的. 取值 true|false -->
				<entry key="hibernate.cache.use_query_cache" value="false" />
			</map> 
 		</property> 
	</bean>
	
	<!-- JPA事务管理器  -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" >
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<!-- 使用cglib进行动态代理        -->
	<!-- 注解管理事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"  proxy-target-class="true"/>
	
	<!-- 整合spring data jpa -->
	<jpa:repositories base-package="cn.itcast.bos.dao" />
</beans>